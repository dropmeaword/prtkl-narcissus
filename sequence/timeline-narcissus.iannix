/*
 *	IanniX Score File
 */


/*
 *	This method is called first.
 *	It is the good section for asking user for script global variables (parameters).
 *	
 * 	This section is never overwritten by IanniX when saving.
 */
function askUserForParameters() {
	//title("The title of the parameter box");
	//ask("Group name of the parameter (only for display purposes)", "Parameter label", "myGlobalVar", "theDefaultValue");
}


/*
 *	This method stores all the operations made through IanniX scripts.
 *	You can add some commands here to make your own scripts!
 *	Scripts are written in Javascript but even with a limited knowledge of Javascript, many types of useful scripts can be created.
 *	
 *	Beyond the standard javascript commands, the run() function is used to send commands to IanniX.
 *	Commands must be provided to run() as a single string.
 *	For example, run("zoom 100"); sets the display zoom to 100%.
 *	
 *	To combine numeric parameters with text commands to produce a string, use the concatenation operator.
 *	In the following example center_x and center_y are in numeric variables and must be concatenated to the command string.
 *	Example: run("setPos current " + center_x + " " + center_y + " 0");
 *	
 *	To learn IanniX commands, perform an manipulation in IanniX graphical user interface, and see the Helper window.
 *	You'll see the syntax of the command-equivalent action.
 *	
 *	And finally, remember that most of commands must target an object.
 *	Global syntax is always run("<command name> <target> <arguments>");
 *	Targets can be an ID (number) or a Group ID (string name of group) (please see "Info" tab in Inspector panel).
 *	Special targets are "current" (last used ID), "all" (all the objects) and "lastCurve" (last used curve).
 *	
 * 	This section is never overwritten by IanniX when saving.
 */
function makeWithScript() {
	//Clears the score
	run("clear");
	//Resets rotation
	run("rotate 0 0 0");
	//Resets score viewport center
	run("center 0 0");
	//Resets score zoom
	run("zoom 100");
}


/*
 *	When an incoming message is received, this method is called.
 *		- <protocol> tells information about the nature of message ("osc", "midi", "direct…)
 *		- <host> and <port> gives the origin of message, specially for IP protocols (for OpenSoundControl, UDP or TCP, it is the IP and port of the application that sends the message)
 *		- <destination> is the supposed destination of message (for OpenSoundControl it is the path, for MIDI it is Control Change or Note on/off…)
 *		- <values> are an array of arguments contained in the message
 *	
 * 	This section is never overwritten by IanniX when saving.
 */
function onIncomingMessage(protocol, host, port, destination, values) {
	//Logs a message in the console (open "Config" tab from Inspector panel and see "Message log")
	console("Received on '" + protocol + "' (" + host + ":" + port + ") to '" + destination + "', " + values.length + " values : ");
	
	//Browses all the arguments and displays them in log window
	for(var valueIndex = 0 ; valueIndex < values.length ; valueIndex++)
		console("- arg " + valueIndex + " = " + values[valueIndex]);
}


/*
 *	This method stores all the operations made through the graphical user interface.
 *	You are not supposed to modify this section, but it can be useful to remove some stuff that you added accidentaly.
 *	
 * 	Be very careful! This section is automaticaly overwritten when saving a score.
 */
function madeThroughGUI() {
//GUI: NEVER EVER REMOVE THIS LINE
	run("rotate 0 0 0");
	run("zoom 576.594425057346");
	run("speed 5");


	run("add curve 1");
	run("setpos current -3.42105 2.34072 0");
	run("setpointsellipse current 10 10");
	run("setsize current 1.9");
	run("setresize current 20 20");
	run("add cursor 2");
	run("setcurve current lastCurve");
	run("setpos current -13.265 4.10035 0");
	run("setpattern current 0 0 1");
	run("settime current 19004.8667144775");
	run("setmessage current 20, - ,");
	run("setboundssourcemode current 1");
	run("setspeedf current 12");


	run("add curve 3");
	run("setpos current -3.52649 2.09383 0");
	run("setpointsellipse current 6 6");
	run("setresize current 12 12");
	run("add cursor 4");
	run("setcurve current lastCurve");
	run("setpos current -8.89939 -0.576739 0");
	run("setpattern current 0 0 1");
	run("settime current 1604.97993454337");
	run("setspeed current 1");
	run("setspeedf current 0");
	run("setmessage current 20, - ,");


	run("add curve 6");
	run("setpos current -16.7858 24.6063 0");
	run("setpointsellipse current 10 10");
	run("setresize current 20 20");
	run("add cursor 7");
	run("setcurve current lastCurve");
	run("setpos current -22.2317 32.9933 0");
	run("setpattern current 0 0 1");
	run("setspeed current 0.10472");
	run("settime current 209.962557370071");
	run("setmessage current 20, - ,");


	run("add trigger 8");
	run("setpos current -24.3845 31.2187 0");
	run("setmessage current 1, direct:// setSpeedF 4 1 ,");

	run("add trigger 9");
	run("setpos current -6.80087 24.8315 0");
	run("setmessage current 1, direct:// setSpeedF 4 0 ,");


	run("add trigger 10");
	run("setpos current -13.4632 3.00359 0");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_id trigger_group_id global_time ,");
	run("setgroup current A");

	run("add trigger 16");
	run("setpos current 6.39664 0.515283 0");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_id trigger_group_id global_time ,");
	run("setgroup current A");


	run("add trigger 14");
	run("setpos current -9.55761 2.14884 0");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_id trigger_group_id global_time ,");
	run("setgroup current B");

	run("add trigger 15");
	run("setpos current 2.48979 1.49199 0");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_id trigger_group_id global_time ,");
	run("setgroup current B");



//GUI: NEVER EVER REMOVE THIS LINE
}


/*
 *	This method stores all the operations made by other softwares through one of the IanniX interfaces.
 *	You are not supposed to modify this section, but it can be useful to remove some stuff that you or a third party software added accidentaly.
 *	
 * 	Be very careful! This section is automaticaly overwritten when saving a score.
 */
function madeThroughInterfaces() {
//INTERFACES: NEVER EVER REMOVE THIS LINE
	run("setspeedf 4 0");




//INTERFACES: NEVER EVER REMOVE THIS LINE
}


/*
 *	This method is called last.
 *	It allows you to modify your hand-drawn score (made through graphical user interface).
 *	
 * 	This section is never overwritten by IanniX when saving.
 */
function alterateWithScript() {
	
}


/*
 *	//APP VERSION: NEVER EVER REMOVE THIS LINE
 *	Made with IanniX 0.9.16
 *	//APP VERSION: NEVER EVER REMOVE THIS LINE
 */

